{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nvar defaultTheme = createTheme(defaultDerivative);\nexport { // colors\nPresetColors, // Statistic\nstatistic, statisticToken, mergeToken, // hooks\nuseStyleRegister, genComponentStyleHook }; // ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\n\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig); // ================================== Hook ==================================\n\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n      rootDesignToken = _React$useContext.token,\n      hashed = _React$useContext.hashed,\n      theme = _React$useContext.theme,\n      components = _React$useContext.components;\n\n  var salt = version + \"-\" + (hashed || '');\n  var mergedTheme = theme || defaultTheme;\n\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n    salt: salt,\n    override: _extends({\n      override: rootDesignToken\n    }, components),\n    formatToken: formatToken\n  }),\n      _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n      token = _useCacheToken2[0],\n      hashId = _useCacheToken2[1];\n\n  return [mergedTheme, token, hashed ? hashId : ''];\n}","map":{"version":3,"names":["_extends","_slicedToArray","createTheme","useCacheToken","useStyleRegister","React","version","PresetColors","defaultDerivative","defaultSeedToken","formatToken","genComponentStyleHook","statisticToken","merge","mergeToken","statistic","defaultTheme","defaultConfig","token","hashed","DesignTokenContext","createContext","useToken","_React$useContext","useContext","rootDesignToken","theme","components","salt","mergedTheme","_useCacheToken","override","_useCacheToken2","hashId"],"sources":["C:/Users/37360/Desktop/Lucru/MoldovianSocialMedia/node_modules/antd/es/theme/internal.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { createTheme, useCacheToken, useStyleRegister } from '@ant-design/cssinjs';\nimport React from 'react';\nimport version from '../version';\nimport { PresetColors } from './interface';\nimport defaultDerivative from './themes/default';\nimport defaultSeedToken from './themes/seed';\nimport formatToken from './util/alias';\nimport genComponentStyleHook from './util/genComponentStyleHook';\nimport statisticToken, { merge as mergeToken, statistic } from './util/statistic';\nvar defaultTheme = createTheme(defaultDerivative);\nexport {\n// colors\nPresetColors,\n// Statistic\nstatistic, statisticToken, mergeToken,\n// hooks\nuseStyleRegister, genComponentStyleHook };\n// ================================ Context =================================\n// To ensure snapshot stable. We disable hashed in test env.\nexport var defaultConfig = {\n  token: defaultSeedToken,\n  hashed: true\n};\nexport var DesignTokenContext = /*#__PURE__*/React.createContext(defaultConfig);\n// ================================== Hook ==================================\nexport function useToken() {\n  var _React$useContext = React.useContext(DesignTokenContext),\n    rootDesignToken = _React$useContext.token,\n    hashed = _React$useContext.hashed,\n    theme = _React$useContext.theme,\n    components = _React$useContext.components;\n  var salt = version + \"-\" + (hashed || '');\n  var mergedTheme = theme || defaultTheme;\n  var _useCacheToken = useCacheToken(mergedTheme, [defaultSeedToken, rootDesignToken], {\n      salt: salt,\n      override: _extends({\n        override: rootDesignToken\n      }, components),\n      formatToken: formatToken\n    }),\n    _useCacheToken2 = _slicedToArray(_useCacheToken, 2),\n    token = _useCacheToken2[0],\n    hashId = _useCacheToken2[1];\n  return [mergedTheme, token, hashed ? hashId : ''];\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,gBAArC,QAA6D,qBAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,iBAAP,MAA8B,kBAA9B;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,cAAP,IAAyBC,KAAK,IAAIC,UAAlC,EAA8CC,SAA9C,QAA+D,kBAA/D;AACA,IAAIC,YAAY,GAAGd,WAAW,CAACM,iBAAD,CAA9B;AACA,SACA;AACAD,YAFA,EAGA;AACAQ,SAJA,EAIWH,cAJX,EAI2BE,UAJ3B,EAKA;AACAV,gBANA,EAMkBO,qBANlB,G,CAOA;AACA;;AACA,OAAO,IAAIM,aAAa,GAAG;EACzBC,KAAK,EAAET,gBADkB;EAEzBU,MAAM,EAAE;AAFiB,CAApB;AAIP,OAAO,IAAIC,kBAAkB,GAAG,aAAaf,KAAK,CAACgB,aAAN,CAAoBJ,aAApB,CAAtC,C,CACP;;AACA,OAAO,SAASK,QAAT,GAAoB;EACzB,IAAIC,iBAAiB,GAAGlB,KAAK,CAACmB,UAAN,CAAiBJ,kBAAjB,CAAxB;EAAA,IACEK,eAAe,GAAGF,iBAAiB,CAACL,KADtC;EAAA,IAEEC,MAAM,GAAGI,iBAAiB,CAACJ,MAF7B;EAAA,IAGEO,KAAK,GAAGH,iBAAiB,CAACG,KAH5B;EAAA,IAIEC,UAAU,GAAGJ,iBAAiB,CAACI,UAJjC;;EAKA,IAAIC,IAAI,GAAGtB,OAAO,GAAG,GAAV,IAAiBa,MAAM,IAAI,EAA3B,CAAX;EACA,IAAIU,WAAW,GAAGH,KAAK,IAAIV,YAA3B;;EACA,IAAIc,cAAc,GAAG3B,aAAa,CAAC0B,WAAD,EAAc,CAACpB,gBAAD,EAAmBgB,eAAnB,CAAd,EAAmD;IACjFG,IAAI,EAAEA,IAD2E;IAEjFG,QAAQ,EAAE/B,QAAQ,CAAC;MACjB+B,QAAQ,EAAEN;IADO,CAAD,EAEfE,UAFe,CAF+D;IAKjFjB,WAAW,EAAEA;EALoE,CAAnD,CAAlC;EAAA,IAOEsB,eAAe,GAAG/B,cAAc,CAAC6B,cAAD,EAAiB,CAAjB,CAPlC;EAAA,IAQEZ,KAAK,GAAGc,eAAe,CAAC,CAAD,CARzB;EAAA,IASEC,MAAM,GAAGD,eAAe,CAAC,CAAD,CAT1B;;EAUA,OAAO,CAACH,WAAD,EAAcX,KAAd,EAAqBC,MAAM,GAAGc,MAAH,GAAY,EAAvC,CAAP;AACD"},"metadata":{},"sourceType":"module"}