{"ast":null,"code":"import { updateObjectInArray } from \"../utils/object-helper\";\nimport { userAPI } from \"../api/userAPI\";\nlet initialState = {\n  usersData: [],\n  totalUsersCount: 0,\n  pageSize: 10,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\nexport const usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FOLLOW\":\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followed: true\n        })\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followed: false\n        })\n      };\n\n    case \"SET_USERS\":\n      return { ...state,\n        usersData: [...action.users]\n      };\n\n    case \"SET_CURRENT_PAGE\":\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case \"SET_TOTAL_USERS_COUNT\":\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case \"TOGGLE_IS_FETCHING\":\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case \"TOGGLE_IS_FOLLOWING_PROGRESS\":\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const actions = {\n  followSuccess: userId => ({\n    type: \"FOLLOW\",\n    userId: userId\n  }),\n  unfollowSuccess: userId => ({\n    type: \"UNFOLLOW\",\n    userId: userId\n  }),\n  setUsers: users => ({\n    type: \"SET_USERS\",\n    users: users\n  }),\n  setCurrentPage: currentPage => ({\n    type: \"SET_CURRENT_PAGE\",\n    currentPage: currentPage\n  }),\n  setTotalUsersCount: count => ({\n    type: \"SET_TOTAL_USERS_COUNT\",\n    count: count\n  }),\n  toggleIsFetching: isFetching => ({\n    type: \"TOGGLE_IS_FETCHING\",\n    isFetching: isFetching\n  }),\n  toggleFollowingProgress: (isFetching, userId) => ({\n    type: \"TOGGLE_IS_FOLLOWING_PROGRESS\",\n    isFetching,\n    userId\n  })\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true));\n    dispatch(actions.setCurrentPage(currentPage));\n    let data = await userAPI.getUsers(currentPage, pageSize);\n    dispatch(actions.toggleIsFetching(false));\n    dispatch(actions.setUsers(data.items));\n    dispatch(actions.setTotalUsersCount(data.totalCount));\n  };\n};\nexport const _followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\nexport const onFollow = userId => {\n  return async dispatch => {\n    let apiMethod = userAPI.follow.bind(userAPI);\n    let actionCreator = actions.followSuccess;\n\n    _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};\nexport const onUnfollow = userId => {\n  return async dispatch => {\n    let apiMethod = userAPI.unfollow.bind(userAPI);\n    let actionCreator = actions.unfollowSuccess;\n\n    _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};","map":{"version":3,"names":["updateObjectInArray","userAPI","initialState","usersData","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","users","count","filter","id","actions","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","getState","data","items","totalCount","_followUnfollowFlow","apiMethod","actionCreator","resultCode","onFollow","follow","bind","onUnfollow","unfollow"],"sources":["C:/Users/37360/Desktop/Lucru/MoldovianSocialMedia/src/redux/users-reducer.ts"],"sourcesContent":["import {updateObjectInArray} from \"../utils/object-helper\";\r\nimport {UserType} from \"../types/types\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {InferActionsType} from \"./redux-store\";\r\nimport {userAPI} from \"../api/userAPI\";\r\n\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UserType>,\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>,\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\n\r\nexport const usersReducer = (state = initialState, action: ActionsTypes) : InitialStateType =>{\r\n\r\n\r\n    switch (action.type){\r\n        case \"FOLLOW\":\r\n\r\n            return {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.userId, \"id\",{followed: true})\r\n            }\r\n        case \"UNFOLLOW\":\r\n\r\n            return {\r\n                ...state,\r\n                usersData: updateObjectInArray(state.usersData, action.userId, \"id\",{followed: false})\r\n\r\n            }\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                usersData: [...action.users]\r\n            }\r\n        case \"SET_CURRENT_PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case \"SET_TOTAL_USERS_COUNT\":\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case \"TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"TOGGLE_IS_FOLLOWING_PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const actions = {\r\n    followSuccess : (userId: number) => ({type: \"FOLLOW\", userId: userId} as const),\r\n    unfollowSuccess : (userId: number) => ({type: \"UNFOLLOW\", userId: userId} as const),\r\n    setUsers : (users: Array<UserType>) => ({type: \"SET_USERS\", users: users} as const),\r\n    setCurrentPage : (currentPage: number) => ({type: \"SET_CURRENT_PAGE\", currentPage: currentPage} as const),\r\n    setTotalUsersCount : (count: number) => ({type: \"SET_TOTAL_USERS_COUNT\", count: count} as const),\r\n    toggleIsFetching : (isFetching: boolean) => ({type: \"TOGGLE_IS_FETCHING\", isFetching: isFetching} as const),\r\n    toggleFollowingProgress : (isFetching: boolean, userId: number) => ({type: \"TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId} as const)\r\n}\r\n\r\n\r\ntype PropertiesType<T> = T extends {[key: string] : infer U} ? U : never\r\ntype ActionsTypes = InferActionsType<typeof actions>\r\n\r\ntype DispatchType = Dispatch<ActionsTypes>;\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, any, ActionsTypes>\r\n\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType =>{\r\n    return async (dispatch, getState) => {\r\n\r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(currentPage));\r\n\r\n        let data = await userAPI.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nexport const _followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any, actionCreator: (userId: number)=> ActionsTypes) => {\r\n\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId)\r\n    if(data.resultCode==0){\r\n\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const onFollow = (userId: number): ThunkType => {\r\n\r\n        return async (dispatch) => {\r\n        let apiMethod = userAPI.follow.bind(userAPI);\r\n        let actionCreator = actions.followSuccess;\r\n        _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}\r\n\r\n\r\nexport const onUnfollow = (userId: number): ThunkType =>{\r\n\r\n        return async (dispatch) => {\r\n        let apiMethod = userAPI.unfollow.bind(userAPI);\r\n        let actionCreator = actions.unfollowSuccess;\r\n        _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}