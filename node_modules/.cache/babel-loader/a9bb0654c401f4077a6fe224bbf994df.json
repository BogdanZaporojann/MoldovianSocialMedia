{"ast":null,"code":"// import React from \"react\";\n// import {connect} from \"react-redux\";\n// import {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\n// import {Profile} from \"./Profile\";\n// import {withRouter} from \"react-router-dom\";\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n// import {compose} from \"redux\";\n//\n// class ProfileContainer extends React.Component{\n//\n//     componentDidMount() {\n//\n//         let userId = this.props.match.params.userId;\n//         if(!userId) {\n//             userId = this.props.authorizedUserId;\n//         }\n//\n//\n//         this.props.getUserProfile(userId);\n//         this.props.getUserStatus(userId);\n//     }\n//\n//\n//     render() {\n//         return(\n//             <Profile profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\n//         );\n//     }\n//\n//\n// }\n//\n//\n//\n// const mapStateToProps = (state) => {\n//     return ({\n//         profile: state.profilePage.profile,\n//         status: state.profilePage.status,\n//         isAuth: state.auth.isAuth,\n//         authorizedUserId: state.auth.userId\n//     })\n// }\n//\n// export default compose(\n//     connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus}),\n//     withRouter,\n//     withAuthRedirect\n// )(ProfileContainer)","map":{"version":3,"names":[],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["// import React from \"react\";\n// import {connect} from \"react-redux\";\n// import {getUserProfile, getUserStatus, updateUserStatus} from \"../../redux/profile-reducer\";\n// import {Profile} from \"./Profile\";\n// import {withRouter} from \"react-router-dom\";\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n// import {compose} from \"redux\";\n//\n// class ProfileContainer extends React.Component{\n//\n//     componentDidMount() {\n//\n//         let userId = this.props.match.params.userId;\n//         if(!userId) {\n//             userId = this.props.authorizedUserId;\n//         }\n//\n//\n//         this.props.getUserProfile(userId);\n//         this.props.getUserStatus(userId);\n//     }\n//\n//\n//     render() {\n//         return(\n//             <Profile profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\n//         );\n//     }\n//\n//\n// }\n//\n//\n//\n// const mapStateToProps = (state) => {\n//     return ({\n//         profile: state.profilePage.profile,\n//         status: state.profilePage.status,\n//         isAuth: state.auth.isAuth,\n//         authorizedUserId: state.auth.userId\n//     })\n// }\n//\n// export default compose(\n//     connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus}),\n//     withRouter,\n//     withAuthRedirect\n// )(ProfileContainer)"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}