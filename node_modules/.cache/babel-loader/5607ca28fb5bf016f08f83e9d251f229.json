{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/neverGiveUp/src/components/Users/Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from \"./Paginator.module.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Paginator = _ref => {\n  _s();\n\n  let {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(2);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPortionNumber(portionNumber - 1),\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 39\n      }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => onPageChanged(p),\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this)), portionNumber < portionCount && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPortionNumber(portionNumber + 1),\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"rf6XPLq6vlcSTtfUUCB9LdNmmP8=\");\n\n_c = Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["styles","React","useState","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/components/Users/Paginator.jsx"],"sourcesContent":["import styles from \"./Paginator.module.css\";\nimport React, {useState} from \"react\";\n\n\n\nexport const Paginator = ({totalUsersCount,pageSize,currentPage,onPageChanged,portionSize=10}) => {\n\n\n\n\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n\n    let pages = [];\n\n    for(let i=1; i<=pagesCount; i++){\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount/portionSize);\n    let [portionNumber,setPortionNumber] = useState(2);\n    let leftPortionPageNumber = (portionNumber - 1)*portionSize+1;\n    let rightPortionPageNumber = portionNumber*portionSize;\n\n    return(\n        <div>\n\n            {/*{pages.map( (page)=>{*/}\n            {/*    return <span className={currentPage === page && styles.selectedPage}*/}\n            {/*                 onClick={(e) => onPageChanged(page)}>{page}</span>*/}\n            {/*})}*/}\n            <div>\n\n                {portionNumber > 1 && <button onClick={()=>setPortionNumber(portionNumber-1)}>PREV</button>}\n                {pages\n                    .filter(p=>p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                    .map(p=><span onClick={()=>onPageChanged(p)} key={p}>{p}</span>)}\n\n                {portionNumber<portionCount && <button onClick={()=>setPortionNumber(portionNumber+1)}>NEXT</button>}\n            </div>\n\n        </div>\n    );\n}"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAIA,OAAO,MAAMC,SAAS,GAAG,QAAyE;EAAA;;EAAA,IAAxE;IAACC,eAAD;IAAiBC,QAAjB;IAA0BC,WAA1B;IAAsCC,aAAtC;IAAoDC,WAAW,GAAC;EAAhE,CAAwE;EAK9F,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;EAEA,IAAIO,KAAK,GAAG,EAAZ;;EAEA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEJ,UAAhB,EAA4BI,CAAC,EAA7B,EAAgC;IAC5BD,KAAK,CAACE,IAAN,CAAWD,CAAX;EACH;;EAED,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAACD,WAArB,CAAnB;EACA,IAAI,CAACQ,aAAD,EAAeC,gBAAf,IAAmCf,QAAQ,CAAC,CAAD,CAA/C;EACA,IAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAoBR,WAApB,GAAgC,CAA5D;EACA,IAAIW,sBAAsB,GAAGH,aAAa,GAACR,WAA3C;EAEA,oBACI;IAAA,uBAMI;MAAA,WAEKQ,aAAa,GAAG,CAAhB,iBAAqB;QAAQ,OAAO,EAAE,MAAIC,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAF1B,EAGKJ,KAAK,CACDQ,MADJ,CACWC,CAAC,IAAEA,CAAC,IAAIH,qBAAL,IAA8BG,CAAC,IAAEF,sBAD/C,EAEIG,GAFJ,CAEQD,CAAC,iBAAE;QAAM,OAAO,EAAE,MAAId,aAAa,CAACc,CAAD,CAAhC;QAAA,UAA8CA;MAA9C,GAA0CA,CAA1C;QAAA;QAAA;QAAA;MAAA,QAFX,CAHL,EAOKL,aAAa,GAACD,YAAd,iBAA8B;QAAQ,OAAO,EAAE,MAAIE,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAArC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPnC;IAAA;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH,CArCM;;GAAMb,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}