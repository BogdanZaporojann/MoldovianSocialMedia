{"ast":null,"code":"// import {connect} from \"react-redux\";\n// import {getUsers, onFollow, onUnfollow} from \"../../redux/users-reducer\";\n// import React from \"react\";\n// import {Users} from \"./Users\";\n// import {Preloader} from \"../common/Preloader/Preloader\";\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n// import {compose} from \"redux\";\n// import {getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getIsAuth} from \"../../redux/users-selectors\";\n//\n// class UsersContainer extends React.Component{\n//\n//     componentDidMount() {\n//         this.props.getUsers(this.props.currentPage, this.props.pageSize);\n//     }\n//\n//     onPageChanged = (pageNumber) => {\n//         this.props.getUsers(pageNumber, this.props.pageSize);\n//     }\n//\n//\n//     render(){\n//\n//         return(\n//             <>\n//                 {this.props.isFetching\n//                     ? <Preloader />\n//                     : null}\n//                 <Users usersData={this.props.usersData}\n//                        totalUsersCount={this.props.totalUsersCount}\n//                        pageSize={this.props.pageSize}\n//                        currentPage={this.props.currentPage}\n//                        followingInProgress={this.props.followingInProgress}\n//                        isFetching={this.props.isFetching}\n//                        onFollow={this.props.onFollow}\n//                        onUnfollow={this.props.onUnfollow}\n//                        onPageChanged={this.onPageChanged}/>\n//             </>\n//         );\n//     }\n// }\n//\n//\n// let mapStateToProps = (state)  => ({\n//     usersData: state.usersPage.usersData,\n//     pageSize: getPageSize(state),\n//     totalUsersCount: getTotalUsersCount(state),\n//     currentPage: getCurrentPage(state),\n//     isFetching: getIsFetching(state),\n//     followingInProgress: getFollowingInProgress(state),\n//     isAuth: getIsAuth(state)\n//\n// })\n//\n//\n// export default compose(\n//     connect(mapStateToProps, {getUsers, onFollow, onUnfollow}),\n//     withAuthRedirect\n// )(UsersContainer)","map":{"version":3,"names":[],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/components/Users/UsersContainer.jsx"],"sourcesContent":["// import {connect} from \"react-redux\";\n// import {getUsers, onFollow, onUnfollow} from \"../../redux/users-reducer\";\n// import React from \"react\";\n// import {Users} from \"./Users\";\n// import {Preloader} from \"../common/Preloader/Preloader\";\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\n// import {compose} from \"redux\";\n// import {getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getIsAuth} from \"../../redux/users-selectors\";\n//\n// class UsersContainer extends React.Component{\n//\n//     componentDidMount() {\n//         this.props.getUsers(this.props.currentPage, this.props.pageSize);\n//     }\n//\n//     onPageChanged = (pageNumber) => {\n//         this.props.getUsers(pageNumber, this.props.pageSize);\n//     }\n//\n//\n//     render(){\n//\n//         return(\n//             <>\n//                 {this.props.isFetching\n//                     ? <Preloader />\n//                     : null}\n//                 <Users usersData={this.props.usersData}\n//                        totalUsersCount={this.props.totalUsersCount}\n//                        pageSize={this.props.pageSize}\n//                        currentPage={this.props.currentPage}\n//                        followingInProgress={this.props.followingInProgress}\n//                        isFetching={this.props.isFetching}\n//                        onFollow={this.props.onFollow}\n//                        onUnfollow={this.props.onUnfollow}\n//                        onPageChanged={this.onPageChanged}/>\n//             </>\n//         );\n//     }\n// }\n//\n//\n// let mapStateToProps = (state)  => ({\n//     usersData: state.usersPage.usersData,\n//     pageSize: getPageSize(state),\n//     totalUsersCount: getTotalUsersCount(state),\n//     currentPage: getCurrentPage(state),\n//     isFetching: getIsFetching(state),\n//     followingInProgress: getFollowingInProgress(state),\n//     isAuth: getIsAuth(state)\n//\n// })\n//\n//\n// export default compose(\n//     connect(mapStateToProps, {getUsers, onFollow, onUnfollow}),\n//     withAuthRedirect\n// )(UsersContainer)"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}