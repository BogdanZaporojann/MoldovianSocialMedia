{"ast":null,"code":"import { store } from \"./store\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_POST = 'UPDATE-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nlet initialState = {\n  profileData: [{\n    id: 1,\n    text: 'Text 1',\n    likesCount: 1\n  }, {\n    id: 2,\n    text: 'Text 2',\n    likesCount: 2\n  }, {\n    id: 3,\n    text: 'Text 3',\n    likesCount: 3\n  }],\n  newPostText: 'it-kamasutra.com',\n  profile: null\n};\nexport const profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          text: state.newPostText,\n          likesCount: 1\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.profileData = [...stateCopy.profileData];\n        stateCopy.profileData.push(newPost);\n        stateCopy.newPostText = '';\n        return stateCopy;\n      }\n\n    case UPDATE_POST:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText = action.text;\n        return stateCopy;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const ADD_POST_ACTION_CREATOR = () => {\n  let ADD_POST = 'ADD-POST';\n  return {\n    type: ADD_POST\n  };\n};\n_c = ADD_POST_ACTION_CREATOR;\nexport const UPDATE_POST_ACTION_CREATOR = text => {\n  let UPDATE_POST = 'UPDATE-POST';\n  return {\n    type: UPDATE_POST,\n    text: text\n  };\n};\n_c2 = UPDATE_POST_ACTION_CREATOR;\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ADD_POST_ACTION_CREATOR\");\n$RefreshReg$(_c2, \"UPDATE_POST_ACTION_CREATOR\");","map":{"version":3,"names":["store","ADD_POST","UPDATE_POST","SET_USER_PROFILE","initialState","profileData","id","text","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","stateCopy","push","ADD_POST_ACTION_CREATOR","UPDATE_POST_ACTION_CREATOR","setUserProfile"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/profile-reducer.js"],"sourcesContent":["import {store} from \"./store\";\n\nconst ADD_POST= 'ADD-POST'\nconst UPDATE_POST='UPDATE-POST';\nconst SET_USER_PROFILE='SET_USER_PROFILE';\n\nlet initialState = {\n    profileData: [\n        {\n            id: 1,\n            text: 'Text 1',\n            likesCount: 1\n        },\n        {\n            id: 2,\n            text: 'Text 2',\n            likesCount:2\n        },\n        {\n            id: 3,\n            text: 'Text 3',\n            likesCount:3\n        }\n    ],\n    newPostText: 'it-kamasutra.com',\n    profile: null\n}\n\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type){\n        case ADD_POST : {\n            let newPost = {\n                text: state.newPostText,\n                likesCount: 1\n            };\n            let stateCopy = {...state};\n            stateCopy.profileData = [...stateCopy.profileData];\n            stateCopy.profileData.push(newPost);\n            stateCopy.newPostText = '';\n            return stateCopy;\n        }\n        case UPDATE_POST: {\n            let stateCopy = {...state}\n            stateCopy.newPostText = action.text;\n            return stateCopy;\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const ADD_POST_ACTION_CREATOR = () => {\n    let ADD_POST = 'ADD-POST'\n    return{\n        type: ADD_POST\n    }\n}\nexport const UPDATE_POST_ACTION_CREATOR = (text) => {\n    let UPDATE_POST = 'UPDATE-POST'\n    return {\n        type: UPDATE_POST,\n        text: text\n    }\n}\n\nexport const setUserProfile = (profile) => ({\n    type: SET_USER_PROFILE,\n    profile\n})"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,SAApB;AAEA,MAAMC,QAAQ,GAAE,UAAhB;AACA,MAAMC,WAAW,GAAC,aAAlB;AACA,MAAMC,gBAAgB,GAAC,kBAAvB;AAEA,IAAIC,YAAY,GAAG;EACfC,WAAW,EAAE,CACT;IACIC,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,QAFV;IAGIC,UAAU,EAAE;EAHhB,CADS,EAMT;IACIF,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,QAFV;IAGIC,UAAU,EAAC;EAHf,CANS,EAWT;IACIF,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,QAFV;IAGIC,UAAU,EAAC;EAHf,CAXS,CADE;EAkBfC,WAAW,EAAE,kBAlBE;EAmBfC,OAAO,EAAE;AAnBM,CAAnB;AAsBA,OAAO,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAC5D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKb,QAAL;MAAgB;QACZ,IAAIc,OAAO,GAAG;UACVR,IAAI,EAAEK,KAAK,CAACH,WADF;UAEVD,UAAU,EAAE;QAFF,CAAd;QAIA,IAAIQ,SAAS,GAAG,EAAC,GAAGJ;QAAJ,CAAhB;QACAI,SAAS,CAACX,WAAV,GAAwB,CAAC,GAAGW,SAAS,CAACX,WAAd,CAAxB;QACAW,SAAS,CAACX,WAAV,CAAsBY,IAAtB,CAA2BF,OAA3B;QACAC,SAAS,CAACP,WAAV,GAAwB,EAAxB;QACA,OAAOO,SAAP;MACH;;IACD,KAAKd,WAAL;MAAkB;QACd,IAAIc,SAAS,GAAG,EAAC,GAAGJ;QAAJ,CAAhB;QACAI,SAAS,CAACP,WAAV,GAAwBI,MAAM,CAACN,IAA/B;QACA,OAAOS,SAAP;MACH;;IACD,KAAKb,gBAAL;MAAuB;QACnB,OAAO,EACH,GAAGS,KADA;UAEHF,OAAO,EAAEG,MAAM,CAACH;QAFb,CAAP;MAIH;;IACD;MACI,OAAOE,KAAP;EAxBR;AA0BH,CA3BM;AA8BP,OAAO,MAAMM,uBAAuB,GAAG,MAAM;EACzC,IAAIjB,QAAQ,GAAG,UAAf;EACA,OAAM;IACFa,IAAI,EAAEb;EADJ,CAAN;AAGH,CALM;KAAMiB,uB;AAMb,OAAO,MAAMC,0BAA0B,GAAIZ,IAAD,IAAU;EAChD,IAAIL,WAAW,GAAG,aAAlB;EACA,OAAO;IACHY,IAAI,EAAEZ,WADH;IAEHK,IAAI,EAAEA;EAFH,CAAP;AAIH,CANM;MAAMY,0B;AAQb,OAAO,MAAMC,cAAc,GAAIV,OAAD,KAAc;EACxCI,IAAI,EAAEX,gBADkC;EAExCO;AAFwC,CAAd,CAAvB"},"metadata":{},"sourceType":"module"}