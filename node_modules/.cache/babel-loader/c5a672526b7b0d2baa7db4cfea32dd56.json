{"ast":null,"code":"const ADD_MESSAGE = 'ADD_MESSAGE';\nlet initialState = {\n  messageData: [{\n    id: 1,\n    message: 'Message 1'\n  }, {\n    id: 2,\n    message: 'Message 2'\n  }, {\n    id: 3,\n    message: 'Message 3'\n  }, {\n    id: 4,\n    message: 'Message 4'\n  }],\n  dialogData: [{\n    id: 1,\n    name: 'Dialog 1'\n  }, {\n    id: 2,\n    name: 'Dialog 2'\n  }, {\n    id: 3,\n    name: 'Dialog 3'\n  }, {\n    id: 4,\n    name: 'Dialog 4'\n  }]\n};\nlet a = 5;\nlet b;\nconsole.log(typeof a);\nexport const dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        return { ...state,\n          messageData: [...state.messageData, {\n            id: 4,\n            message: action.newMessageBody\n          }]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const sendMessage = newMessageBody => ({\n  type: ADD_MESSAGE,\n  newMessageBody\n});","map":{"version":3,"names":["ADD_MESSAGE","initialState","messageData","id","message","dialogData","name","a","b","console","log","dialogsReducer","state","action","type","newMessageBody","sendMessage"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/dialogs-reducer.ts"],"sourcesContent":["const ADD_MESSAGE='ADD_MESSAGE';\n\n\n\nlet initialState = {\n    messageData : [\n        {\n            id: 1,\n            message: 'Message 1'\n        },\n        {\n            id: 2,\n            message: 'Message 2'\n        },\n        {\n            id: 3,\n            message: 'Message 3'\n        },\n        {\n            id: 4,\n            message: 'Message 4'\n        }\n\n    ],\n    dialogData : [\n        {\n            id: 1,\n            name: 'Dialog 1'\n        },\n        {\n            id: 2,\n            name: 'Dialog 2'\n        },\n        {\n            id: 3,\n            name: 'Dialog 3'\n        },\n        {\n            id: 4,\n            name: 'Dialog 4'\n        }\n\n    ],\n}\n\nexport type InitialStateType = typeof initialState;\n\nlet a = 5;\nlet b : typeof a;\nconsole.log(typeof a);\n\nexport const dialogsReducer = (state = initialState, action: any): InitialStateType => {\n\n\n\n\n    switch (action.type){\n        case ADD_MESSAGE : {\n            return {\n                ...state,\n                messageData: [...state.messageData, ({id: 4,message: action.newMessageBody})]\n            }\n        }\n        default:\n            return state;\n    }\n\n\n}\n\n\n\n\n\n\n\nexport type SendMessageActionType = {\n    type: typeof ADD_MESSAGE,\n    newMessageBody: string\n}\n\nexport const sendMessage = (newMessageBody: string) => ({\n    type: ADD_MESSAGE,\n    newMessageBody\n})\n\n"],"mappings":"AAAA,MAAMA,WAAW,GAAC,aAAlB;AAIA,IAAIC,YAAY,GAAG;EACfC,WAAW,EAAG,CACV;IACIC,EAAE,EAAE,CADR;IAEIC,OAAO,EAAE;EAFb,CADU,EAKV;IACID,EAAE,EAAE,CADR;IAEIC,OAAO,EAAE;EAFb,CALU,EASV;IACID,EAAE,EAAE,CADR;IAEIC,OAAO,EAAE;EAFb,CATU,EAaV;IACID,EAAE,EAAE,CADR;IAEIC,OAAO,EAAE;EAFb,CAbU,CADC;EAoBfC,UAAU,EAAG,CACT;IACIF,EAAE,EAAE,CADR;IAEIG,IAAI,EAAE;EAFV,CADS,EAKT;IACIH,EAAE,EAAE,CADR;IAEIG,IAAI,EAAE;EAFV,CALS,EAST;IACIH,EAAE,EAAE,CADR;IAEIG,IAAI,EAAE;EAFV,CATS,EAaT;IACIH,EAAE,EAAE,CADR;IAEIG,IAAI,EAAE;EAFV,CAbS;AApBE,CAAnB;AA2CA,IAAIC,CAAC,GAAG,CAAR;AACA,IAAIC,CAAJ;AACAC,OAAO,CAACC,GAAR,CAAY,OAAOH,CAAnB;AAEA,OAAO,MAAMI,cAAc,GAAG,YAAyD;EAAA,IAAxDC,KAAwD,uEAAhDX,YAAgD;EAAA,IAAlCY,MAAkC;;EAKnF,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKd,WAAL;MAAmB;QACf,OAAO,EACH,GAAGY,KADA;UAEHV,WAAW,EAAE,CAAC,GAAGU,KAAK,CAACV,WAAV,EAAwB;YAACC,EAAE,EAAE,CAAL;YAAOC,OAAO,EAAES,MAAM,CAACE;UAAvB,CAAxB;QAFV,CAAP;MAIH;;IACD;MACI,OAAOH,KAAP;EARR;AAYH,CAjBM;AA8BP,OAAO,MAAMI,WAAW,GAAID,cAAD,KAA6B;EACpDD,IAAI,EAAEd,WAD8C;EAEpDe;AAFoD,CAA7B,CAApB"},"metadata":{},"sourceType":"module"}