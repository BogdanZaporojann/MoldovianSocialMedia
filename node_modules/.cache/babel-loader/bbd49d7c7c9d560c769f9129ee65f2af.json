{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\nexport const appReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};","map":{"version":3,"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"sources":["C:/Users/37360/Desktop/Lucru/MoldovianSocialMedia/src/redux/app-reducer.ts"],"sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS='INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    initialized : boolean\r\n}\r\n\r\nlet initialState : InitialStateType = {\r\n    initialized: false\r\n}\r\nexport const appReducer = ( state = initialState ,action:any): InitialStateType => {\r\n    switch (action.type){\r\n        case INITIALIZED_SUCCESS:\r\n        return {\r\n            ...state,\r\n            initialized: true\r\n        }\r\n        default :\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({\r\n    type: INITIALIZED_SUCCESS\r\n})\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(()=>{\r\n            dispatch(initializedSuccess());\r\n        })\r\n}"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,MAAMC,mBAAmB,GAAC,qBAA1B;AAMA,IAAIC,YAA+B,GAAG;EAClCC,WAAW,EAAE;AADqB,CAAtC;AAGA,OAAO,MAAMC,UAAU,GAAG,YAAyD;EAAA,IAAvDC,KAAuD,uEAA/CH,YAA+C;EAAA,IAAjCI,MAAiC;;EAC/E,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKN,mBAAL;MACA,OAAO,EACH,GAAGI,KADA;QAEHF,WAAW,EAAE;MAFV,CAAP;;IAIA;MACI,OAAO,EACH,GAAGE;MADA,CAAP;EAPR;AAWH,CAZM;AAkBP,OAAO,MAAMG,kBAAkB,GAAG,OAAqC;EACnED,IAAI,EAAEN;AAD6D,CAArC,CAA3B;AAIP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAkB;EACjD,IAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;EACAY,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAI;IACxBJ,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;EACH,CAFL;AAGH,CALM"},"metadata":{},"sourceType":"module"}