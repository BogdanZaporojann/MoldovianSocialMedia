{"ast":null,"code":"var _jsxFileName = \"/home/bogdan/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/neverGiveUp/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUserProfile, getUserStatus, updateUserStatus, updateUserPersonalInfo } from \"../../redux/profile-reducer\";\nimport { Profile } from \"./Profile\";\nimport { withRouter } from \"../common/withRouterHook\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getUserStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(this.props.profile.aboutMe);\n\n    if (prevProps.status !== this.props.status) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateUserPersonalInfo: this.props.updateUserPersonalInfo,\n      updateUserStatus: this.props.updateUserStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    authorizedUserId: state.auth.userId\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getUserStatus,\n  updateUserStatus,\n  updateUserPersonalInfo\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"names":["React","connect","getUserProfile","getUserStatus","updateUserStatus","updateUserPersonalInfo","Profile","withRouter","withAuthRedirect","compose","ProfileContainer","Component","refreshProfile","userId","props","router","params","authorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","console","log","profile","aboutMe","status","render","mapStateToProps","state","profilePage","isAuth","auth"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile, getUserStatus, updateUserStatus, updateUserPersonalInfo} from \"../../redux/profile-reducer\";\nimport {Profile} from \"./Profile\";\nimport {withRouter} from \"../common/withRouterHook\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component{\n\n\n    refreshProfile(){\n        let userId = this.props.router.params.userId;\n        if(!userId) {\n            userId = this.props.authorizedUserId;\n            if(!userId){\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getUserStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        console.log(this.props.profile.aboutMe)\n        if (prevProps.status !== this.props.status) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return(\n            <Profile profile={this.props.profile} status={this.props.status}\n                     updateUserPersonalInfo={this.props.updateUserPersonalInfo}\n                     updateUserStatus={this.props.updateUserStatus}/>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isAuth: state.auth.isAuth,\n        authorizedUserId: state.auth.userId\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps,{getUserProfile, getUserStatus, updateUserStatus, updateUserPersonalInfo}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,cAAR,EAAwBC,aAAxB,EAAuCC,gBAAvC,EAAyDC,sBAAzD,QAAsF,6BAAtF;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA8C;EAG1CC,cAAc,GAAE;IACZ,IAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBH,MAAtC;;IACA,IAAG,CAACA,MAAJ,EAAY;MACRA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;MACA,IAAG,CAACJ,MAAJ,EAAW;QACP,KAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;MACH;IACJ;;IACD,KAAKL,KAAL,CAAWZ,cAAX,CAA0BW,MAA1B;IACA,KAAKC,KAAL,CAAWX,aAAX,CAAyBU,MAAzB;EACH;;EAEDO,iBAAiB,GAAG;IAChB,KAAKR,cAAL;EACH;;EAEDS,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;IAE/CC,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC,OAA/B;;IACA,IAAIN,SAAS,CAACO,MAAV,KAAqB,KAAKf,KAAL,CAAWe,MAApC,EAA4C;MACxC,KAAKjB,cAAL;IACH;EACJ;;EAEDkB,MAAM,GAAG;IACL,oBACI,QAAC,OAAD;MAAS,OAAO,EAAE,KAAKhB,KAAL,CAAWa,OAA7B;MAAsC,MAAM,EAAE,KAAKb,KAAL,CAAWe,MAAzD;MACS,sBAAsB,EAAE,KAAKf,KAAL,CAAWT,sBAD5C;MAES,gBAAgB,EAAE,KAAKS,KAAL,CAAWV;IAFtC;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;AAjCyC;;AAsC9C,MAAM2B,eAAe,GAAIC,KAAD,IAAW;EAC/B,OAAQ;IACJL,OAAO,EAAEK,KAAK,CAACC,WAAN,CAAkBN,OADvB;IAEJE,MAAM,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFtB;IAGJK,MAAM,EAAEF,KAAK,CAACG,IAAN,CAAWD,MAHf;IAIJjB,gBAAgB,EAAEe,KAAK,CAACG,IAAN,CAAWtB;EAJzB,CAAR;AAMH,CAPD;;AASA,eAAeJ,OAAO,CAClBR,OAAO,CAAC8B,eAAD,EAAiB;EAAC7B,cAAD;EAAiBC,aAAjB;EAAgCC,gBAAhC;EAAkDC;AAAlD,CAAjB,CADW,EAElBE,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf"},"metadata":{},"sourceType":"module"}