{"ast":null,"code":"import { profileAPI } from \"../api/profileAPI\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SET_USER_PHOTO_SUCCESS = 'SET_USER_PHOTO_SUCCESS';\nlet initialState = {\n  profileData: [{\n    id: 1,\n    text: 'Text 1',\n    likesCount: 1\n  }, {\n    id: 2,\n    text: 'Text 2',\n    likesCount: 2\n  }, {\n    id: 3,\n    text: 'Text 3',\n    likesCount: 3\n  }],\n  profile: null,\n  status: '',\n  newPostText: ''\n};\nexport const profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let body = action.newPostText;\n        return { ...state,\n          profileData: [...state.profileData, {\n            id: 5,\n            likesCount: 1,\n            text: body\n          }],\n          newPostText: ''\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        debugger;\n        return { ...state,\n          profile: { ...state.profile,\n            ...action.profile\n          }\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SET_USER_PHOTO_SUCCESS:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.data\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const addPost = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const savePhotoSuccess = photo => ({\n  type: SET_USER_PHOTO_SUCCESS,\n  photo\n});\nexport const getUserStatus = userId => {\n  return async dispatch => {\n    let data = await profileAPI.getStatus(userId);\n    dispatch(setStatus(data));\n  };\n};\nexport const updateUserStatus = status => {\n  return async dispatch => {\n    let data = await profileAPI.updateStatus(status);\n\n    if (data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  };\n};\nexport const getUserProfile = userId => {\n  return async dispatch => {\n    let data = await profileAPI.getProfile(userId);\n    dispatch(setUserProfile(data));\n  };\n};\nexport const updateUserPersonalInfo = profile => {\n  return async dispatch => {\n    let data = await profileAPI.updatePersonalInformation(profile);\n    console.log(data);\n\n    if (data.resultCode === 0) {\n      dispatch(setUserProfile(profile));\n    }\n  };\n};\nexport const savePhoto = file => {\n  return async dispatch => {\n    let response = await profileAPI.savePhoto(file);\n\n    if (response.resultCode === 0) {\n      dispatch(savePhotoSuccess(response.data));\n    }\n  };\n};","map":{"version":3,"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","SET_USER_PHOTO_SUCCESS","initialState","profileData","id","text","likesCount","profile","status","newPostText","profileReducer","state","action","type","body","photos","data","addPost","setUserProfile","setStatus","savePhotoSuccess","photo","getUserStatus","userId","dispatch","getStatus","updateUserStatus","updateStatus","resultCode","getUserProfile","getProfile","updateUserPersonalInfo","updatePersonalInformation","console","log","savePhoto","file","response"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/profile-reducer.ts"],"sourcesContent":["import {PostType, ProfileType} from \"../types/types\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"./redux-store\";\nimport {profileAPI} from \"../api/profileAPI\";\n\nconst ADD_POST= 'ADD-POST'\nconst SET_USER_PROFILE='SET_USER_PROFILE';\nconst SET_STATUS='SET_STATUS';\nconst SET_USER_PHOTO_SUCCESS = 'SET_USER_PHOTO_SUCCESS'\n\n\nlet initialState = {\n    profileData: [\n        {\n            id: 1,\n            text: 'Text 1',\n            likesCount: 1\n        },\n        {\n            id: 2,\n            text: 'Text 2',\n            likesCount:2\n        },\n        {\n            id: 3,\n            text: 'Text 3',\n            likesCount:3\n        }\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status:'',\n    newPostText: ''\n}\n\nexport type InitialStateType = typeof initialState;\n\nexport const profileReducer = (state = initialState, action: any) : InitialStateType  => {\n    switch (action.type){\n        case ADD_POST : {\n            let body = action.newPostText;\n            return {\n                ...state,\n                profileData: [...state.profileData, {id: 5, likesCount: 1, text: body}],\n                newPostText: ''\n            }\n        }\n        case SET_USER_PROFILE: {\n            debugger\n            return {\n                ...state,\n                profile: {...state.profile, ...action.profile,}\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case SET_USER_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                profile: {...state.profile, photos:action.data}\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\ntype ActionsType = AddPostActionType | SetUserProfileActionType | SetStatusActionType | SavePhotoSuccessType\n\n\n\ntype AddPostActionType = {\n    type: typeof ADD_POST,\n    newPostText: string\n}\n\nexport const addPost = (newPostText: string): AddPostActionType => ({\n    type: ADD_POST,\n    newPostText\n})\n\n\n\n\ntype SetUserProfileActionType = {\n    type: typeof SET_USER_PROFILE,\n    profile: ProfileType\n}\n\nexport const setUserProfile = (profile: ProfileType) : SetUserProfileActionType => ({\n    type: SET_USER_PROFILE,\n    profile\n})\n\n\n\n\ntype SetStatusActionType = {\n    type: typeof SET_STATUS,\n    status: string\n}\n\nexport const setStatus = (status: string): SetStatusActionType => ({\n        type: SET_STATUS,\n        status\n})\n\ntype SavePhotoSuccessType = {\n    type: typeof SET_USER_PHOTO_SUCCESS,\n    photo: any\n} \n\nexport const savePhotoSuccess = (photo: any): SavePhotoSuccessType => ({\n    type: SET_USER_PHOTO_SUCCESS,\n    photo\n})\n\n\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, any, ActionsType>;\n\nexport const getUserStatus = (userId: number): ThunkType => {\n\n        return async (dispatch) => {\n        let data = await profileAPI.getStatus(userId)\n        dispatch(setStatus(data));\n    }\n}\n\nexport const updateUserStatus = (status: string): ThunkType => {\n\n        return async (dispatch) => {\n\n        let data = await profileAPI.updateStatus(status)\n        if(data.resultCode === 0) {\n\n            dispatch(setStatus(status))\n        }\n    }\n}\n\nexport const getUserProfile = (userId: number): ThunkType => {\n\n        return async (dispatch) => {\n        let data = await profileAPI.getProfile(userId)\n        dispatch(setUserProfile(data));\n    }\n}\n\nexport const updateUserPersonalInfo = (profile: ProfileType) : ThunkType => {\n\n        return async  (dispatch) => {\n        let data = await profileAPI.updatePersonalInformation(profile)\n        console.log(data)\n        if(data.resultCode === 0){\n            dispatch(setUserProfile(profile))\n            }\n    }\n}\n\nexport const savePhoto = (file : any) : ThunkType => {\n\n\n    return async (dispatch) => {\n        let response = await profileAPI.savePhoto(file)\n        if(response.resultCode===0){\n            dispatch(savePhotoSuccess(response.data))\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}