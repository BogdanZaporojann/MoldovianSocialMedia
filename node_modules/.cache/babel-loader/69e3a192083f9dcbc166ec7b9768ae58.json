{"ast":null,"code":"const ADD_MESSAGE = 'ADD_MESSAGE';\nlet initialState = {\n  messageData: [{\n    id: 1,\n    message: 'Message 1'\n  }, {\n    id: 2,\n    message: 'Message 2'\n  }, {\n    id: 3,\n    message: 'Message 3'\n  }, {\n    id: 4,\n    message: 'Message 4'\n  }],\n  dialogData: [{\n    id: 1,\n    name: 'Dialog 1'\n  }, {\n    id: 2,\n    name: 'Dialog 2'\n  }, {\n    id: 3,\n    name: 'Dialog 3'\n  }, {\n    id: 4,\n    name: 'Dialog 4'\n  }]\n};\nexport const dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        return { ...state,\n          messageData: [...state.messageData, {\n            id: 4,\n            message: action.newMessageBody\n          }]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const sendMessage = newMessageBody => ({\n  type: ADD_MESSAGE,\n  newMessageBody\n});","map":{"version":3,"names":["ADD_MESSAGE","initialState","messageData","id","message","dialogData","name","dialogsReducer","state","action","type","newMessageBody","sendMessage"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/dialogs-reducer.ts"],"sourcesContent":["const ADD_MESSAGE='ADD_MESSAGE';\n\ntype MessageType = {\n    id: number\n    message: string\n}\n\ntype DialogType = {\n    id: number\n    name: string\n}\n\nlet initialState = {\n\n    messageData : [\n        {id: 1, message: 'Message 1'},\n        {id: 2, message: 'Message 2'},\n        {id: 3, message: 'Message 3'},\n        {id: 4, message: 'Message 4'}\n    ] as Array<MessageType>,\n\n    dialogData : [\n        {id: 1, name: 'Dialog 1'},\n        {id: 2, name: 'Dialog 2'},\n        {id: 3, name: 'Dialog 3'},\n        {id: 4, name: 'Dialog 4'}\n    ] as Array<DialogType>,\n}\n\nexport type InitialStateType = typeof initialState;\n\n\n\nexport const dialogsReducer = (state = initialState, action: any): InitialStateType => {\n\n    switch (action.type){\n        case ADD_MESSAGE : {\n            return {\n                ...state,\n                messageData: [...state.messageData, ({id: 4,message: action.newMessageBody})]\n            }\n        }\n        default:\n            return state;\n    }\n\n\n}\n\n\n\n\n\n\n\nexport type SendMessageActionType = {\n    type: typeof ADD_MESSAGE,\n    newMessageBody: string\n}\n\nexport const sendMessage = (newMessageBody: string) : SendMessageActionType => ({\n    type: ADD_MESSAGE,\n    newMessageBody\n})\n\n"],"mappings":"AAAA,MAAMA,WAAW,GAAC,aAAlB;AAYA,IAAIC,YAAY,GAAG;EAEfC,WAAW,EAAG,CACV;IAACC,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE;EAAjB,CADU,EAEV;IAACD,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE;EAAjB,CAFU,EAGV;IAACD,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE;EAAjB,CAHU,EAIV;IAACD,EAAE,EAAE,CAAL;IAAQC,OAAO,EAAE;EAAjB,CAJU,CAFC;EASfC,UAAU,EAAG,CACT;IAACF,EAAE,EAAE,CAAL;IAAQG,IAAI,EAAE;EAAd,CADS,EAET;IAACH,EAAE,EAAE,CAAL;IAAQG,IAAI,EAAE;EAAd,CAFS,EAGT;IAACH,EAAE,EAAE,CAAL;IAAQG,IAAI,EAAE;EAAd,CAHS,EAIT;IAACH,EAAE,EAAE,CAAL;IAAQG,IAAI,EAAE;EAAd,CAJS;AATE,CAAnB;AAqBA,OAAO,MAAMC,cAAc,GAAG,YAAyD;EAAA,IAAxDC,KAAwD,uEAAhDP,YAAgD;EAAA,IAAlCQ,MAAkC;;EAEnF,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKV,WAAL;MAAmB;QACf,OAAO,EACH,GAAGQ,KADA;UAEHN,WAAW,EAAE,CAAC,GAAGM,KAAK,CAACN,WAAV,EAAwB;YAACC,EAAE,EAAE,CAAL;YAAOC,OAAO,EAAEK,MAAM,CAACE;UAAvB,CAAxB;QAFV,CAAP;MAIH;;IACD;MACI,OAAOH,KAAP;EARR;AAYH,CAdM;AA2BP,OAAO,MAAMI,WAAW,GAAID,cAAD,KAAqD;EAC5ED,IAAI,EAAEV,WADsE;EAE5EW;AAF4E,CAArD,CAApB"},"metadata":{},"sourceType":"module"}