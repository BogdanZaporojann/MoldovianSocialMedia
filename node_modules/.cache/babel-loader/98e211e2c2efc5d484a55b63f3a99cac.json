{"ast":null,"code":"import { userAPI } from \"../api/api.js\";\nimport { updateObjectInArray } from \"../utils/object-helper\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  usersData: [],\n  totalUsersCount: 0,\n  pageSize: 10,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\nexport const usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: [...action.users]\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId: userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId: userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users: users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage: currentPage\n});\nexport const setTotalUsersCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching: isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(currentPage));\n  let data = await userAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\nexport const onFollow = userId => async dispatch => {\n  let apiMethod = userAPI.follow.bind(userAPI);\n  let actionCreator = followSuccess;\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n};\nexport const onUnfollow = userId => async dispatch => {\n  let apiMethod = userAPI.unfollow.bind(userAPI);\n  let actionCreator = unfollowSuccess;\n  followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n};","map":{"version":3,"names":["userAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","usersData","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","users","count","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","data","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","onFollow","follow","bind","onUnfollow","unfollow"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/users-reducer.ts"],"sourcesContent":["import {userAPI} from \"../api/api.js\";\nimport {updateObjectInArray} from \"../utils/object-helper\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\ntype User = {\n    id: number,\n    \n}\n\n\nlet initialState = {\n    usersData: [],\n    totalUsersCount: 0,\n    pageSize: 10,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\n\n\nexport const usersReducer = (state = initialState, action) =>{\n\n\n    switch (action.type){\n        case FOLLOW:\n\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, \"id\",{followed: true})\n            }\n        case UNFOLLOW:\n\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, \"id\",{followed: false})\n\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                usersData: [...action.users]\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({\n    type: FOLLOW,\n    userId: userId\n})\n\nexport const unfollowSuccess = (userId) => ({\n    type: UNFOLLOW,\n    userId: userId\n})\n\nexport const setUsers = (users) => ({\n    type: SET_USERS,\n    users: users\n})\n\nexport const setCurrentPage = (currentPage) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n})\n\nexport const setTotalUsersCount = (count) => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: count\n})\n\nexport const toggleIsFetching = (isFetching) => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching: isFetching\n})\n\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n\n})\n\nexport const getUsers = (currentPage, pageSize) =>async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n        let data = await userAPI.getUsers(currentPage, pageSize)\n                dispatch(toggleIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount));\n}\n\nexport const followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await apiMethod(userId)\n    if(data.resultCode==0){\n\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n}\n\nexport const onFollow = (userId) => async (dispatch) => {\n\n        let apiMethod = userAPI.follow.bind(userAPI);\n        let actionCreator = followSuccess;\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n    }\n\n\nexport const onUnfollow = (userId) => async (dispatch) => {\n    let apiMethod = userAPI.unfollow.bind(userAPI);\n    let actionCreator = unfollowSuccess;\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}