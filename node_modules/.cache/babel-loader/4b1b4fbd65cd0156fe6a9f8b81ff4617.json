{"ast":null,"code":"import axios from 'axios';\nexport let instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    'API-KEY': 'd9f5b548-66e1-4d3a-9a83-125429519095'\n  }\n});\nexport let ResultCodesEnum;\n\n(function (ResultCodesEnum) {\n  ResultCodesEnum[ResultCodesEnum[\"Success\"] = 0] = \"Success\";\n  ResultCodesEnum[ResultCodesEnum[\"Error\"] = 1] = \"Error\";\n  ResultCodesEnum[ResultCodesEnum[\"CaptchaIsRequired\"] = 10] = \"CaptchaIsRequired\";\n})(ResultCodesEnum || (ResultCodesEnum = {}));\n\nexport const captchaAPI = {\n  getCaptcha() {\n    return instance.get(`security/get-captcha-url`).then(result => result.data.url);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`/auth/me`).then(result => result.data);\n  },\n\n  login(email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let captcha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    return instance.post(`/auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n\n};","map":{"version":3,"names":["axios","instance","create","withCredentials","baseURL","headers","ResultCodesEnum","captchaAPI","getCaptcha","get","then","result","data","url","authAPI","me","login","email","password","rememberMe","captcha","post","logout","delete"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/api/api.ts"],"sourcesContent":["import axios from 'axios';\n\n\nexport let instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        'API-KEY':'d9f5b548-66e1-4d3a-9a83-125429519095'\n    }\n});\n\n\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1,\n    CaptchaIsRequired = 10\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const captchaAPI = {\n    getCaptcha(){\n        return instance.get(`security/get-captcha-url`).then(result=>result.data.url)\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntype MeResponseType = {\n    data: { id: number,login: string,email: string }\n    messages: Array<string>\n    fieldsErrors: Array<string>\n    resultCode: ResultCodesEnum\n}\n\ntype LoginLogoutResponseType = {\n    resultCode: number\n    messages: Array<string>\n    data: {\n        userId: number\n    }\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get<MeResponseType>(`/auth/me`)\n            .then(result => result.data)\n    },\n    login(email: string, password: string, rememberMe=false,captcha: null | string = null) {\n        return instance.post<LoginLogoutResponseType>(`/auth/login`, {email, password, rememberMe,captcha})\n    },\n    logout(){\n        return instance.delete<LoginLogoutResponseType>(`auth/login`)\n    }\n}\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC/BC,eAAe,EAAE,IADc;EAE/BC,OAAO,EAAG,+CAFqB;EAG/BC,OAAO,EAAE;IACL,WAAU;EADL;AAHsB,CAAb,CAAf;AAUP,WAAYC,eAAZ;;WAAYA,e;EAAAA,e,CAAAA,e;EAAAA,e,CAAAA,e;EAAAA,e,CAAAA,e;GAAAA,e,KAAAA,e;;AAqBZ,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,GAAE;IACR,OAAOP,QAAQ,CAACQ,GAAT,CAAc,0BAAd,EAAyCC,IAAzC,CAA8CC,MAAM,IAAEA,MAAM,CAACC,IAAP,CAAYC,GAAlE,CAAP;EACH;;AAHqB,CAAnB;AA0CP,OAAO,MAAMC,OAAO,GAAG;EACnBC,EAAE,GAAG;IACD,OAAOd,QAAQ,CAACQ,GAAT,CAA8B,UAA9B,EACFC,IADE,CACGC,MAAM,IAAIA,MAAM,CAACC,IADpB,CAAP;EAEH,CAJkB;;EAKnBI,KAAK,CAACC,KAAD,EAAgBC,QAAhB,EAAkF;IAAA,IAAhDC,UAAgD,uEAArC,KAAqC;IAAA,IAA/BC,OAA+B,uEAAN,IAAM;IACnF,OAAOnB,QAAQ,CAACoB,IAAT,CAAwC,aAAxC,EAAsD;MAACJ,KAAD;MAAQC,QAAR;MAAkBC,UAAlB;MAA6BC;IAA7B,CAAtD,CAAP;EACH,CAPkB;;EAQnBE,MAAM,GAAE;IACJ,OAAOrB,QAAQ,CAACsB,MAAT,CAA0C,YAA1C,CAAP;EACH;;AAVkB,CAAhB"},"metadata":{},"sourceType":"module"}