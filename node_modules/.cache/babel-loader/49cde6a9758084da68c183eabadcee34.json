{"ast":null,"code":"import axios from 'axios';\nlet instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    'API-KEY': 'd9f5b548-66e1-4d3a-9a83-125429519095'\n  }\n});\nexport let userAPI = {\n  getUsers() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(result => result.data);\n  },\n\n  unfollow() {\n    let userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return instance.delete(`follow/${userId}`).then(result => result.data);\n    debugger;\n  },\n\n  follow() {\n    let userId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return instance.post(`follow/${userId}`).then(result => result.data);\n  },\n\n  getProfile(userId) {\n    console.warn(\"To get profile of user with id \" + userId + \" please use profileAPI.getProfile() method\");\n    profileAPI.getProfile(userId);\n  }\n\n};\nexport let profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/${userId}`).then(result => result.data);\n  },\n\n  getStatus(userId) {\n    return instance.get(`profile/status/${userId}`).then(result => result.data);\n  },\n\n  updateStatus(status) {\n    return instance.put('profile/status', {\n      status: status\n    }).then(result => result.data);\n  }\n\n};\nexport const captchaAPI = {\n  getCaptcha() {\n    return instance.get(`security/get-captcha-url`).then(result => result.data.url);\n  }\n\n};\nexport let ResultCodesEnum;\n\n(function (ResultCodesEnum) {\n  ResultCodesEnum[ResultCodesEnum[\"Success\"] = 0] = \"Success\";\n  ResultCodesEnum[ResultCodesEnum[\"Error\"] = 1] = \"Error\";\n  ResultCodesEnum[ResultCodesEnum[\"CaptchaIsRequired\"] = 10] = \"CaptchaIsRequired\";\n})(ResultCodesEnum || (ResultCodesEnum = {}));\n\nexport const authAPI = {\n  me() {\n    return instance.get(`/auth/me`).then(result => result.data);\n  },\n\n  login(email, password) {\n    let rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let captcha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    return instance.post(`/auth/login`, {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete(`auth/login`);\n  }\n\n};","map":{"version":3,"names":["axios","instance","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","result","data","unfollow","userId","delete","follow","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","captchaAPI","getCaptcha","url","ResultCodesEnum","authAPI","me","login","email","password","rememberMe","captcha","logout"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/api/api.ts"],"sourcesContent":["import axios, {AxiosResponse} from 'axios';\n\n\nlet instance = axios.create({\n    withCredentials: true,\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n    headers: {\n        'API-KEY':'d9f5b548-66e1-4d3a-9a83-125429519095'\n    }\n});\n\n\nexport let userAPI = {\n    getUsers(currentPage=1, pageSize=10){\n        return instance.get( `users?page=${currentPage}&count=${pageSize}`)\n            .then(result => result.data);\n    },\n    unfollow(userId=1){\n        return instance.delete(`follow/${userId}`)\n            .then(result => result.data);\n        debugger\n    },\n    follow(userId=1){\n        return instance.post(`follow/${userId}`)\n            .then(result => result.data);\n    },\n    getProfile(userId: number){\n        console.warn(\"To get profile of user with id \"+userId+\" please use profileAPI.getProfile() method\");\n        profileAPI.getProfile(userId);\n    }\n\n}\n\n\nexport let profileAPI = {\n    getProfile(userId: number){\n        return instance.get(`profile/${userId}`)\n            .then(result => result.data)\n    },\n    getStatus(userId: number){\n        return instance.get(`profile/status/${userId}`)\n            .then(result => result.data)\n    },\n    updateStatus(status: string){\n        return instance.put('profile/status',{status: status})\n            .then(result => result.data)\n    }\n}\n\n\nexport const captchaAPI = {\n    getCaptcha(){\n        return instance.get(`security/get-captcha-url`).then(result=>result.data.url)\n    }\n}\n\n\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1,\n    CaptchaIsRequired = 10\n}\n\n\n\ntype MeResponseType = {\n    data: { id: number,login: string,email: string }\n    messages: Array<string>\n    fieldsErrors: Array<string>\n    resultCode: ResultCodesEnum\n}\n\ntype LoginLogoutResponseType = {\n    resultCode: number\n    messages: Array<string>\n    data: any\n}\n\n\nexport const authAPI = {\n    me() {\n        return instance.get<MeResponseType>(`/auth/me`)\n            .then(result => result.data)\n    },\n    login(email: string, password: string, rememberMe=false,captcha: null | string = null) {\n        return instance.post<LoginLogoutResponseType>(`/auth/login`, {email, password, rememberMe,captcha})\n    },\n    logout(){\n        return instance.delete<LoginLogoutResponseType>(`auth/login`)\n    }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}