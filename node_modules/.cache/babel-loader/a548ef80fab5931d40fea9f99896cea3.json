{"ast":null,"code":"import { userAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/object-helper\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  usersData: [],\n  totalUsersCount: 0,\n  pageSize: 10,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\nexport const usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        usersData: updateObjectInArray(state.usersData, action.userId, \"id\", {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        usersData: [...action.users]\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const actions = {\n  followSuccess: userId => ({\n    type: FOLLOW,\n    userId: userId\n  }),\n  unfollowSuccess: userId => ({\n    type: UNFOLLOW,\n    userId: userId\n  }),\n  setUsers: users => ({\n    type: SET_USERS,\n    users: users\n  }),\n  setCurrentPage: currentPage => ({\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  }),\n  setTotalUsersCount: count => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: count\n  }),\n  toggleIsFetching: isFetching => ({\n    type: TOGGLE_IS_FETCHING,\n    isFetching: isFetching\n  }),\n  toggleFollowingProgress: (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n  })\n};\nexport const getUsers = (currentPage, pageSize) => {\n  return async (dispatch, getState) => {\n    dispatch(actions.toggleIsFetching(true));\n    dispatch(actions.setCurrentPage(currentPage));\n    let data = await userAPI.getUsers(currentPage, pageSize);\n    dispatch(actions.toggleIsFetching(false));\n    dispatch(actions.setUsers(data.items));\n    dispatch(actions.setTotalUsersCount(data.totalCount));\n  };\n};\nexport const _followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(actions.toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(actions.toggleFollowingProgress(false, userId));\n};\nexport const onFollow = userId => {\n  return async dispatch => {\n    let apiMethod = userAPI.follow.bind(userAPI);\n    let actionCreator = actions.followSuccess;\n\n    _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};\nexport const onUnfollow = userId => {\n  return async dispatch => {\n    let apiMethod = userAPI.unfollow.bind(userAPI);\n    let actionCreator = actions.unfollowSuccess;\n\n    _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n  };\n};","map":{"version":3,"names":["userAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","usersData","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","users","count","filter","id","actions","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","getState","data","items","totalCount","_followUnfollowFlow","apiMethod","actionCreator","resultCode","onFollow","follow","bind","onUnfollow","unfollow"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/users-reducer.ts"],"sourcesContent":["import {userAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helper\";\nimport {UserType} from \"../types/types\";\nimport {AppStateType} from \"./redux-store\";\nimport {Dispatch} from \"redux\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {InferActionsType} from \"./redux-store\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\n\n\n\n\nlet initialState = {\n    usersData: [] as Array<UserType>,\n    totalUsersCount: 0,\n    pageSize: 10,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>,\n}\n\ntype InitialStateType = typeof initialState;\n\n\nexport const usersReducer = (state = initialState, action: ActionsTypes) : InitialStateType =>{\n\n\n    switch (action.type){\n        case FOLLOW:\n\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, \"id\",{followed: true})\n            }\n        case UNFOLLOW:\n\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, \"id\",{followed: false})\n\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                usersData: [...action.users]\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.count\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        default:\n            return state;\n    }\n}\n\n\n\nexport const actions = {\n    followSuccess : (userId: number) => ({type: FOLLOW, userId: userId}),\n    unfollowSuccess : (userId: number) => ({type: UNFOLLOW, userId: userId}),\n    setUsers : (users: Array<UserType>) => ({type: SET_USERS, users: users}),\n    setCurrentPage : (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage: currentPage}),\n    setTotalUsersCount : (count: number) => ({type: SET_TOTAL_USERS_COUNT, count: count}),\n    toggleIsFetching : (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching: isFetching}),\n    toggleFollowingProgress : (isFetching: boolean, userId: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n}\n\ntype ActionsTypes = InferActionsType<typeof actions>\n\n\ntype DispatchType = Dispatch<ActionsTypes>;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, any, ActionsTypes>\n\n\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType =>{\n    return async (dispatch, getState) => {\n        dispatch(actions.toggleIsFetching(true));\n        dispatch(actions.setCurrentPage(currentPage));\n        let data = await userAPI.getUsers(currentPage, pageSize)\n        dispatch(actions.toggleIsFetching(false));\n        dispatch(actions.setUsers(data.items));\n        dispatch(actions.setTotalUsersCount(data.totalCount));\n    }\n}\n\nexport const _followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any, actionCreator: (userId: number)=> any) => {\n\n    dispatch(actions.toggleFollowingProgress(true, userId));\n    let data = await apiMethod(userId)\n    if(data.resultCode==0){\n\n        dispatch(actionCreator(userId))\n    }\n    dispatch(actions.toggleFollowingProgress(false, userId))\n}\n\nexport const onFollow = (userId: number): ThunkType => {\n\n        return async (dispatch) => {\n        let apiMethod = userAPI.follow.bind(userAPI);\n        let actionCreator = actions.followSuccess;\n        _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n    }\n}\n\n\nexport const onUnfollow = (userId: number): ThunkType =>{\n\n        return async (dispatch) => {\n        let apiMethod = userAPI.unfollow.bind(userAPI);\n        let actionCreator = actions.unfollowSuccess;\n        _followUnfollowFlow(dispatch, userId, apiMethod, actionCreator);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}