{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\37360\\\\Desktop\\\\Lucru\\\\MoldovianSocialMedia\\\\src\\\\components\\\\common\\\\Paginator\\\\Paginator.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // @ts-ignore\n\nimport styles from \"./Paginator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Paginator = _ref => {\n  _s();\n\n  let {\n    totalUsersCount,\n    pageSize,\n    currentPage,\n    onPageChanged,\n    portionSize = 10\n  } = _ref;\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.block,\n    children: [portionNumber > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      onClick: () => {\n        setPortionNumber(portionNumber - 1);\n      },\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: (currentPage === p && styles.selectedPage) + \" \" + styles.numberPage,\n        onClick: e => {\n          onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }, this);\n    }), portionCount > portionNumber && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      onClick: () => {\n        setPortionNumber(portionNumber + 1);\n      },\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Paginator, \"PqSpRormX9bOdHL/iV6zF/npLhc=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"names":["React","useState","styles","Paginator","totalUsersCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","block","btn","filter","p","map","selectedPage","numberPage","e"],"sources":["C:/Users/37360/Desktop/Lucru/MoldovianSocialMedia/src/components/common/Paginator/Paginator.tsx"],"sourcesContent":["import React, {useState} from 'react'\r\n// @ts-ignore\r\nimport styles from \"./Paginator.module.css\";\r\n\r\ntype Props = {\r\n    totalUsersCount:number,\r\n    pageSize:number,\r\n    currentPage:number,\r\n    onPageChanged:(pageNumber:number)=>void,\r\n    portionSize?:number\r\n}\r\n\r\nlet Paginator:React.FC<Props> = ({totalUsersCount,pageSize,currentPage,onPageChanged,portionSize=10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    let [portionNumber,setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) *portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber*portionSize;\r\n    return <div className={styles.block}>\r\n        {portionNumber > 1 &&\r\n            <button className={styles.btn} onClick={()=>\r\n            {setPortionNumber(portionNumber - 1)}\r\n            }>PREV</button>}\r\n        {\r\n            pages\r\n                .filter(p=> p>=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p)=>\r\n                {\r\n                    return <span\r\n                        key={p}\r\n                        className={(currentPage === p && styles.selectedPage)+\" \"+ styles.numberPage}\r\n                        onClick={(e) => { onPageChanged(p); }}>{p}</span>})}\r\n\r\n        { portionCount > portionNumber &&\r\n            <button className={styles.btn} onClick={() => {setPortionNumber(portionNumber + 1) }}>NEXT</button>\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Paginator;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAUA,IAAIC,SAAyB,GAAG,QAAyE;EAAA;;EAAA,IAAxE;IAACC,eAAD;IAAiBC,QAAjB;IAA0BC,WAA1B;IAAsCC,aAAtC;IAAoDC,WAAW,GAAC;EAAhE,CAAwE;EAErG,IAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;EACA,IAAIO,KAAK,GAAG,EAAZ;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAqC;IACjCD,KAAK,CAACE,IAAN,CAAWD,CAAX;EACH;;EAED,IAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;EAEA,IAAI,CAACQ,aAAD,EAAeC,gBAAf,IAAmChB,QAAQ,CAAC,CAAD,CAA/C;EAEA,IAAIiB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAqBR,WAArB,GAAmC,CAA/D;EACA,IAAIW,sBAAsB,GAAGH,aAAa,GAACR,WAA3C;EACA,oBAAO;IAAK,SAAS,EAAEN,MAAM,CAACkB,KAAvB;IAAA,WACFJ,aAAa,GAAG,CAAhB,iBACG;MAAQ,SAAS,EAAEd,MAAM,CAACmB,GAA1B;MAA+B,OAAO,EAAE,MACxC;QAACJ,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;MAAoC,CADrC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFD,EAMCJ,KAAK,CACAU,MADL,CACYC,CAAC,IAAGA,CAAC,IAAEL,qBAAH,IAA4BK,CAAC,IAAEJ,sBAD/C,EAEKK,GAFL,CAEUD,CAAD,IACL;MACI,oBAAO;QAEH,SAAS,EAAE,CAACjB,WAAW,KAAKiB,CAAhB,IAAqBrB,MAAM,CAACuB,YAA7B,IAA2C,GAA3C,GAAgDvB,MAAM,CAACwB,UAF/D;QAGH,OAAO,EAAGC,CAAD,IAAO;UAAEpB,aAAa,CAACgB,CAAD,CAAb;QAAmB,CAHlC;QAAA,UAGqCA;MAHrC,GACEA,CADF;QAAA;QAAA;QAAA;MAAA,QAAP;IAGsD,CAP9D,CAND,EAeDR,YAAY,GAAGC,aAAf,iBACE;MAAQ,SAAS,EAAEd,MAAM,CAACmB,GAA1B;MAA+B,OAAO,EAAE,MAAM;QAACJ,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;MAAqC,CAApF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBD;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAyBH,CAvCD;;GAAIb,S;;KAAAA,S;AA8CJ,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}