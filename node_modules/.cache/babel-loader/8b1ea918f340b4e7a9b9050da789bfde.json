{"ast":null,"code":"import { authAPI, captchaAPI } from \"../api/api.js\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  captchaUrl: null\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      {\n        return { ...state,\n          ...action.payload\n        };\n      }\n\n    case GET_CAPTCHA_URL_SUCCESS:\n      {\n        return { ...state,\n          captchaUrl: action.captchaUrl\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    login,\n    email,\n    isAuth\n  }\n});\nexport const getAuthUserData = () => async dispatch => {\n  let data = await authAPI.me();\n\n  if (data.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = data.data;\n    dispatch(setAuthUserData(id, login, email, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let result = await authAPI.login(email, password, rememberMe);\n\n  if (result.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    dispatch(stopSubmit(\"loginForm\", {\n      _error: result.data.messages\n    }));\n  }\n};\nexport const logout = () => async dispatch => {\n  let result = await authAPI.logout();\n  debugger;\n\n  if (result.data.resultCode === 0) {\n    debugger;\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport const getCaptchaUrl = () => async dispatch => {\n  const urlCaptcha = await captchaAPI.getCaptcha();\n  dispatch(getCaptchaUrlSuccess(urlCaptcha));\n};\n\nconst getCaptchaUrlSuccess = captchaUrl => ({\n  type: GET_CAPTCHA_URL_SUCCESS,\n  captchaUrl\n});","map":{"version":3,"names":["authAPI","captchaAPI","stopSubmit","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuth","captchaUrl","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","data","me","resultCode","id","password","rememberMe","result","_error","messages","logout","getCaptchaUrl","urlCaptcha","getCaptcha","getCaptchaUrlSuccess"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/auth-reducer.ts"],"sourcesContent":["import {authAPI,captchaAPI} from \"../api/api.js\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA='auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n}\n\nexport const authReducer = (state=initialState, action: any) => {\n    switch (action.type){\n        case SET_USER_DATA: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        case GET_CAPTCHA_URL_SUCCESS: {\n            return {\n                ...state,\n                captchaUrl: action.captchaUrl\n            }\n        }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\n\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\n    type:SET_USER_DATA,\n    payload: {userId, login, email, isAuth}\n})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let data = await authAPI.me();\n\n            if(data.resultCode === 0) {\n                let {id,login, email} = data.data;\n                dispatch(setAuthUserData(id,login,email,true));\n            }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let result = await authAPI.login(email, password, rememberMe);\n            if(result.data.resultCode === 0){\n                dispatch(getAuthUserData())\n            } else {\n                dispatch(stopSubmit(\"loginForm\",{_error : result.data.messages}))\n            }\n}\n\nexport const logout = () => async (dispatch) => {\n    let result = await authAPI.logout()\n    debugger\n            if(result.data.resultCode === 0){\n                debugger\n                dispatch(setAuthUserData(null,null,null,false))\n            }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) =>  {\n    const urlCaptcha = await captchaAPI.getCaptcha();\n    dispatch(getCaptchaUrlSuccess(urlCaptcha))\n}\n\nconst getCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    captchaUrl\n})"],"mappings":"AAAA,SAAQA,OAAR,EAAgBC,UAAhB,QAAiC,eAAjC;AACA,SAAQC,UAAR,QAAyB,YAAzB;AAEA,MAAMC,aAAa,GAAC,oBAApB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AAEA,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IADO;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,MAAM,EAAE,KAJO;EAKfC,UAAU,EAAE;AALG,CAAnB;AAQA,OAAO,MAAMC,WAAW,GAAG,YAAqC;EAAA,IAApCC,KAAoC,uEAA9BP,YAA8B;EAAA,IAAhBQ,MAAgB;;EAC5D,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKX,aAAL;MAAoB;QAChB,OAAO,EACH,GAAGS,KADA;UAEH,GAAGC,MAAM,CAACE;QAFP,CAAP;MAIH;;IACD,KAAKX,uBAAL;MAA8B;QAC1B,OAAO,EACH,GAAGQ,KADA;UAEHF,UAAU,EAAEG,MAAM,CAACH;QAFhB,CAAP;MAIH;;IACD;MACI,OAAO,EACH,GAAGE;MADA,CAAP;EAdR;AAkBH,CAnBM;AAsBP,OAAO,MAAMI,eAAe,GAAG,CAACV,MAAD,EAASE,KAAT,EAAgBD,KAAhB,EAAuBE,MAAvB,MAAmC;EAC9DK,IAAI,EAACX,aADyD;EAE9DY,OAAO,EAAE;IAACT,MAAD;IAASE,KAAT;IAAgBD,KAAhB;IAAuBE;EAAvB;AAFqD,CAAnC,CAAxB;AAKP,OAAO,MAAMQ,eAAe,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACrD,IAAIC,IAAI,GAAG,MAAMnB,OAAO,CAACoB,EAAR,EAAjB;;EAEQ,IAAGD,IAAI,CAACE,UAAL,KAAoB,CAAvB,EAA0B;IACtB,IAAI;MAACC,EAAD;MAAId,KAAJ;MAAWD;IAAX,IAAoBY,IAAI,CAACA,IAA7B;IACAD,QAAQ,CAACF,eAAe,CAACM,EAAD,EAAId,KAAJ,EAAUD,KAAV,EAAgB,IAAhB,CAAhB,CAAR;EACH;AACZ,CAPM;AASP,OAAO,MAAMC,KAAK,GAAG,CAACD,KAAD,EAAQgB,QAAR,EAAkBC,UAAlB,KAAiC,MAAON,QAAP,IAAoB;EACtE,IAAIO,MAAM,GAAG,MAAMzB,OAAO,CAACQ,KAAR,CAAcD,KAAd,EAAqBgB,QAArB,EAA+BC,UAA/B,CAAnB;;EACQ,IAAGC,MAAM,CAACN,IAAP,CAAYE,UAAZ,KAA2B,CAA9B,EAAgC;IAC5BH,QAAQ,CAACD,eAAe,EAAhB,CAAR;EACH,CAFD,MAEO;IACHC,QAAQ,CAAChB,UAAU,CAAC,WAAD,EAAa;MAACwB,MAAM,EAAGD,MAAM,CAACN,IAAP,CAAYQ;IAAtB,CAAb,CAAX,CAAR;EACH;AACZ,CAPM;AASP,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAOV,QAAP,IAAoB;EAC5C,IAAIO,MAAM,GAAG,MAAMzB,OAAO,CAAC4B,MAAR,EAAnB;EACA;;EACQ,IAAGH,MAAM,CAACN,IAAP,CAAYE,UAAZ,KAA2B,CAA9B,EAAgC;IAC5B;IACAH,QAAQ,CAACF,eAAe,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,EAAgB,KAAhB,CAAhB,CAAR;EACH;AACZ,CAPM;AASP,OAAO,MAAMa,aAAa,GAAG,MAAM,MAAOX,QAAP,IAAqB;EACpD,MAAMY,UAAU,GAAG,MAAM7B,UAAU,CAAC8B,UAAX,EAAzB;EACAb,QAAQ,CAACc,oBAAoB,CAACF,UAAD,CAArB,CAAR;AACH,CAHM;;AAKP,MAAME,oBAAoB,GAAItB,UAAD,KAAiB;EAC1CI,IAAI,EAAEV,uBADoC;EAE1CM;AAF0C,CAAjB,CAA7B"},"metadata":{},"sourceType":"module"}