{"ast":null,"code":"import { authAPI } from \"../api/api\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\nexport const setAuthUserData = (userId, login, email) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    login,\n    email\n  }\n});\nexport const getAuthUserData = () => dispatch => {\n  authAPI.me().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        login,\n        email\n      } = data.data;\n      dispatch(setAuthUserData(id, login, email));\n    }\n  });\n};\nexport const login = (email, password, r) => dispatch => {};","map":{"version":3,"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","me","then","resultCode","id","password","r"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/auth-reducer.js"],"sourcesContent":["import {authAPI} from \"../api/api\";\n\nconst SET_USER_DATA='SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nexport const authReducer = (state=initialState, action) => {\n    switch (action.type){\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\n\nexport const setAuthUserData = (userId, login, email) => ({\n    type:SET_USER_DATA,\n    data: {userId, login, email}\n})\n\nexport const getAuthUserData = () => (dispatch) => {\n    authAPI.me()\n        .then(data =>  {\n            if(data.resultCode === 0) {\n                let {id,login, email} = data.data;\n                dispatch(setAuthUserData(id,login,email));\n            }\n        });\n}\n\nexport const login = (email, password, r) => (dispatch) => {\n\n}"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAC,eAApB;AAEA,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IADO;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,MAAM,EAAE;AAJO,CAAnB;AAOA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EACvD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKT,aAAL;MACI,OAAO,EACH,GAAGO,KADA;QAEH,GAAGC,MAAM,CAACE,IAFP;QAGHL,MAAM,EAAE;MAHL,CAAP;;IAKJ;MACI,OAAO,EACH,GAAGE;MADA,CAAP;EARR;AAYH,CAbM;AAgBP,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASE,KAAT,EAAgBD,KAAhB,MAA2B;EACtDM,IAAI,EAACT,aADiD;EAEtDU,IAAI,EAAE;IAACR,MAAD;IAASE,KAAT;IAAgBD;EAAhB;AAFgD,CAA3B,CAAxB;AAKP,OAAO,MAAMS,eAAe,GAAG,MAAOC,QAAD,IAAc;EAC/Cd,OAAO,CAACe,EAAR,GACKC,IADL,CACUL,IAAI,IAAK;IACX,IAAGA,IAAI,CAACM,UAAL,KAAoB,CAAvB,EAA0B;MACtB,IAAI;QAACC,EAAD;QAAIb,KAAJ;QAAWD;MAAX,IAAoBO,IAAI,CAACA,IAA7B;MACAG,QAAQ,CAACF,eAAe,CAACM,EAAD,EAAIb,KAAJ,EAAUD,KAAV,CAAhB,CAAR;IACH;EACJ,CANL;AAOH,CARM;AAUP,OAAO,MAAMC,KAAK,GAAG,CAACD,KAAD,EAAQe,QAAR,EAAkBC,CAAlB,KAAyBN,QAAD,IAAc,CAE1D,CAFM"},"metadata":{},"sourceType":"module"}