{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_POST = 'UPDATE-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  profileData: [{\n    id: 1,\n    text: 'Text 1',\n    likesCount: 1\n  }, {\n    id: 2,\n    text: 'Text 2',\n    likesCount: 2\n  }, {\n    id: 3,\n    text: 'Text 3',\n    likesCount: 3\n  }],\n  newPostText: 'it-kamasutra.com',\n  profile: null,\n  status: ''\n};\nexport const profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let body = state.newPostText;\n        ;\n        return { ...state,\n          profileData: [...state.profileData, {\n            likesCount: 1,\n            text: body\n          }],\n          newPostText: ''\n        };\n      }\n\n    case UPDATE_POST:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText = action.text;\n        return stateCopy;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const addPost = newPostText => ({\n  type: ADD_POST,\n  newPostText\n});\nexport const updateNewPostText = text => {\n  let UPDATE_POST = 'UPDATE-POST';\n  return {\n    type: UPDATE_POST,\n    text: text\n  };\n};\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(data => {\n    dispatch(setStatus(data));\n  });\n};\nexport const updateUserStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport const getUserProfile = userId => {\n  return dispatch => {\n    profileAPI.getProfile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};","map":{"version":3,"names":["profileAPI","ADD_POST","UPDATE_POST","SET_USER_PROFILE","SET_STATUS","initialState","profileData","id","text","likesCount","newPostText","profile","status","profileReducer","state","action","type","body","stateCopy","addPost","updateNewPostText","setUserProfile","setStatus","getUserStatus","userId","dispatch","getStatus","then","data","updateUserStatus","updateStatus","resultCode","getUserProfile","getProfile"],"sources":["/home/bogdan/Рабочий стол/neverGiveUp/src/redux/profile-reducer.js"],"sourcesContent":["import {profileAPI} from \"../api/api\";\n\nconst ADD_POST= 'ADD-POST'\nconst UPDATE_POST='UPDATE-POST';\nconst SET_USER_PROFILE='SET_USER_PROFILE';\nconst SET_STATUS='SET_STATUS';\n\nlet initialState = {\n    profileData: [\n        {\n            id: 1,\n            text: 'Text 1',\n            likesCount: 1\n        },\n        {\n            id: 2,\n            text: 'Text 2',\n            likesCount:2\n        },\n        {\n            id: 3,\n            text: 'Text 3',\n            likesCount:3\n        }\n    ],\n    newPostText: 'it-kamasutra.com',\n    profile: null,\n    status:''\n}\n\nexport const profileReducer = (state = initialState, action) => {\n    switch (action.type){\n        case ADD_POST : {\n            let body = state.newPostText;\n;\n            return {\n                ...state,\n                profileData: [...state.profileData, {likesCount: 1, text: body}],\n                newPostText: ''\n            }\n        }\n        case UPDATE_POST: {\n            let stateCopy = {...state}\n            stateCopy.newPostText = action.text;\n            return stateCopy;\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const addPost = (newPostText) => ({\n    type: ADD_POST,\n    newPostText\n})\nexport const updateNewPostText = (text) => {\n    let UPDATE_POST = 'UPDATE-POST'\n    return {\n        type: UPDATE_POST,\n        text: text\n    }\n}\n\nexport const setUserProfile = (profile) => ({\n    type: SET_USER_PROFILE,\n    profile\n})\n\nexport const setStatus = (status) => ({\n        type: SET_STATUS,\n        status\n    })\n\n\nexport const getUserStatus = (userId) => (dispatch) => {\n    profileAPI.getStatus(userId)\n        .then(data => {\n             dispatch(setStatus(data));\n    })\n}\n\nexport const updateUserStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status).then(data => {\n        if(data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n    })\n}\n\nexport const getUserProfile = (userId) => {\n    return (dispatch) => {\n        profileAPI.getProfile(userId)\n            .then(data => {\n                dispatch(setUserProfile(data));\n            })\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}